/* -------------------------------------------------------------
  Sass CSS3 Mixins! The Cross-Browser CSS3 Sass Library
------------------------------------------------------------- */

/* BACKGROUND SIZE */
@mixin background-size($background-size){
    -moz-background-size: $background-size;
    -webkit-background-size: $background-size;
    -o-background-size: $background-size;
    background-size: $background-size;
}

// Background clipping
// Heads up: FF 3.6 and under need "padding" instead of "padding-box"
@mixin background-clip($clip) {
    -webkit-background-clip: $clip;
    -moz-background-clip: $clip;
    background-clip: $clip;
}

/* BORDER RADIUS */
@mixin border-radius($radius: 0) {
    -moz-border-radius: $radius;
    -webkit-border-radius: $radius;
    -ms-border-radius: $radius;
    border-radius: $radius;
}

@mixin border-radius-separate($topLeftRadius: 5px, $topRightRadius: 5px, $bottomLeftRadius: 5px, $bottomRightRadius: 5px) {
    -webkit-border-top-left-radius: $topLeftRadius;
    -webkit-border-top-right-radius: $topRightRadius;
    -webkit-border-bottom-right-radius: $bottomLeftRadius;
    -webkit-border-bottom-left-radius: $bottomRightRadius;
    -moz-border-radius-topleft: $topLeftRadius;
    -moz-border-radius-topright: $topRightRadius;
    -moz-border-radius-bottomright: $bottomLeftRadius;
    -moz-border-radius-bottomleft: $bottomRightRadius;
    border-top-left-radius: $topLeftRadius;
    border-top-right-radius: $topRightRadius;
    border-bottom-right-radius: $bottomLeftRadius;
    border-bottom-left-radius: $bottomRightRadius;
}

/* BOX */
@mixin box($orient: horizontal, $pack: center, $align: center) {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    -webkit-box-orient: $orient;
    -moz-box-orient: $orient;
    box-orient: $orient;
    -webkit-box-pack: $pack;
    -moz-box-pack: $pack;
    box-pack: $pack;
    -webkit-box-align: $align;
    -moz-box-align: $align;
    box-align: $align;
}

/* BOX RGBA */
@mixin box-rgba($r: 60, $g: 3, $b: 12, $opacity: 0.23, $color: #3C3C3C) {
    background-color: transparent;
    background-color: rgba($r, $g, $b, $opacity);
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=$color, endColorstr=$color);
    zoom: 1;
}

/* BOX SHADOW */
@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    -ms-box-shadow: $shadow;
    -o-box-shadow: $shadow;
    box-shadow: $shadow;
}

/* BOX SIZING */
@mixin box-sizing($type) {
    -webkit-box-sizing: $type;
    -moz-box-sizing: $type;
    box-sizing: $type;
}

/* COLUMNS */
@mixin columns-count-gap($count, $gap) {
    -webkit-column-count: $count;
    -moz-column-count: $count;
    column-count: $count;
    -webkit-column-gap: $gap;
    -moz-column-gap: $gap;
    column-gap: $gap;
}

/* DOUBLE BORDERS */
@mixin double-borders($colorOne, $colorTwo, $radius: 0) {
    border: 1px solid $colorOne;
    -webkit-box-shadow: 0 0 0 1px $colorTwo;
    -moz-box-shadow: 0 0 0 1px $colorTwo;
    box-shadow: 0 0 0 1px $colorTwo;
}

/* TRIPLE BORDERS */
@mixin triple-borders($colorOne: #3C3C3C, $colorTwo: #999999, $colorThree: #000000, $radius: 0) {
    border: 1px solid $colorOne;
    -webkit-box-shadow: 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree;
    -moz-box-shadow: 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree;
    box-shadow: 0 0 0 1px $colorTwo, 0 0 0 2px $colorThree;
}

// Transformations
@mixin rotate($degrees) {
    -webkit-transform: rotate($degrees);
    -moz-transform: rotate($degrees);
    -ms-transform: rotate($degrees);
    -o-transform: rotate($degrees);
    transform: rotate($degrees);
}

@mixin scale($ratio) {
    -webkit-transform: scale($ratio);
    -moz-transform: scale($ratio);
    -ms-transform: scale($ratio);
    -o-transform: scale($ratio);
    transform: scale($ratio);
}

@mixin translate($x, $y) {
    -webkit-transform: translate($x, $y);
    -moz-transform: translate($x, $y);
    -ms-transform: translate($x, $y);
    -o-transform: translate($x, $y);
    transform: translate($x, $y);
}

@mixin skew($x, $y) {
    -webkit-transform: skew($x, $y);
    -moz-transform: skew($x, $y);
    -ms-transform: skewX($x) skewY($y);
    -o-transform: skew($x, $y);
    transform: skew($x, $y);
    -webkit-backface-visibility: hidden;
}

/* FLEX */
@mixin flex($value: 1) {
    -webkit-box-flex: $value;
    -moz-box-flex: $value;
    box-flex: $value;
}

/* FLIP */
@mixin flip($scaleX: -1) {
    -moz-transform: scaleX($scaleX);
    -o-transform: scaleX($scaleX);
    -webkit-transform: scaleX($scaleX);
    transform: scaleX($scaleX);
    filter: FlipH;
    -ms-filter: "FlipH";
}

// User select
// For selecting text on the page
@mixin user-select($select) {
    -webkit-user-select: $select;
    -moz-user-select: $select;
    -ms-user-select: $select;
    -o-user-select: $select;
    user-select: $select;
}

/* OPACITY */
@mixin opacity($opacity) {
    filter: alpha(opacity=($opacity * 100));
    -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
    -moz-opacity: $opacity;
    -khtml-opacity: $opacity;
    opacity: $opacity;
}

// Resize anything
@mixin resizable($direction) {
    resize: $direction; // Options: horizontal, vertical, both
    overflow: auto; // Safari fix
}

/* OUTLINE RADIUS */
@mixin outline-radius($radius: 5px) {
    -webkit-outline-radius: $radius;
    -moz-outline-radius: $radius;
    outline-radius: $radius;
}

/* RESIZE */
@mixin resize($direction: both) {
    -webkit-resize: $direction;
    -moz-resize: $direction;
    resize: $direction;
}

/* TEXT SHADOW */
@mixin text-shadow($params...) {
    text-shadow: $params;
}

/* TEXT SHADOW */
@mixin text-size-adjust($content) {
    -webkit-text-size-adjust: $content;
    -moz-text-size-adjust: $content;
    -ms-text-size-adjust: $content;
    text-size-adjust: $content;
}

/* TRANSFORM  */
@mixin transform($params) {
    -webkit-transform: $params;
    -moz-transform: $params;
    -ms-transform: $params;
    transform: $params;
}

/* TRANSITION */

// Transitions
@mixin transition($transition...) {
    -webkit-transition: $transition;
    -moz-transition: $transition;
    -ms-transition: $transition;
    -o-transition: $transition;
    transition: $transition;
}

@mixin transition-delay($transition-delay) {
    -webkit-transition-delay: $transition-delay;
    -moz-transition-delay: $transition-delay;
    -ms-transition-delay: $transition-delay;
    -o-transition-delay: $transition-delay;
    transition-delay: $transition-delay;
}

@mixin transition-duration($transition-duration) {
    -webkit-transition-duration: $transition-duration;
    -moz-transition-duration: $transition-duration;
    -ms-transition-duration: $transition-duration;
    -o-transition-duration: $transition-duration;
    transition-duration: $transition-duration;
}

// Optional hyphenation
@mixin hyphens($mode: auto) {
    word-wrap: break-word;
    -webkit-hyphens: $mode;
    -moz-hyphens: $mode;
    -ms-hyphens: $mode;
    -o-hyphens: $mode;
    hyphens: $mode;
}

// BACKGROUNDS
// --------------------------------------------------

// Add an alphatransparency value to any background or border color (via Elyse Holladay)
@mixin translucent-background($color: $white, $alpha: 1) {
    background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin translucent-border($color: $white, $alpha: 1) {
    border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
    @include background-clip(padding-box);
}

// Gradient Bar Colors for buttons and alerts
@mixin gradientBar($primaryColor, $secondaryColor, $baseTextColor: #fff, $textShadow: 0 -1px 0 #ccc) {
    color: $baseTextColor;
    text-shadow: $textShadow;
    @include gradient-vertical($primaryColor, $secondaryColor);
    border-color: darken($secondaryColor, 5%);
    border-top-color: lighten($secondaryColor, 5%);
    border-bottom-color: darken($secondaryColor, 10%);
    //border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) fade-in(rgba(0,0,0,.1), 0.15);
}

// Gradients
@mixin gradient-horizontal($startColor: #555, $endColor: #333) {
    background-color: mix($startColor, $endColor, 60%);
    background-image: -moz-linear-gradient(left, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 100% 0, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient(to right, $startColor, $endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=1); // IE9 and down
}

@mixin gradient-vertical($startColor: #555, $endColor: #333) {
    background-color: mix($startColor, $endColor, 60%);
    background-image: -moz-linear-gradient(top, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), to($endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, $startColor, $endColor); // Standard, IE10
    background-repeat: repeat-x;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down
}

@mixin gradient-directional($startColor: #555, $endColor: #333, $deg: 45deg) {
    background-color: $endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient($deg, $startColor, $endColor); // FF 3.6+
    background-image: -webkit-linear-gradient($deg, $startColor, $endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient($deg, $startColor, $endColor); // Opera 11.10
    background-image: linear-gradient($deg, $startColor, $endColor); // Standard, IE10
}

@mixin gradient-horizontal-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
    background-color: mix($midColor, $endColor, 80%);
    background-image: -webkit-gradient(left, linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
    background-image: -webkit-linear-gradient(left, $startColor, $midColor $colorStop, $endColor);
    background-image: -moz-linear-gradient(left, $startColor, $midColor $colorStop, $endColor);
    background-image: -o-linear-gradient(left, $startColor, $midColor $colorStop, $endColor);
    background-image: linear-gradient(to right, $startColor, $midColor $colorStop, $endColor);
    background-repeat: no-repeat;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-vertical-three-colors($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f) {
    background-color: mix($midColor, $endColor, 80%);
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
    background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor);
    background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
    background-repeat: no-repeat;
    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{ie-hex-str($startColor)}', endColorstr='#{ie-hex-str($endColor)}', GradientType=0); // IE9 and down, gets no color-stop at all for proper fallback
}

@mixin gradient-radial($innerColor: #555, $outerColor: #333) {
    background-color: $outerColor;
    background-image: -webkit-gradient(radial, center center, 0, center center, 460, from($innerColor), to($outerColor));
    background-image: -webkit-radial-gradient(circle, $innerColor, $outerColor);
    background-image: -moz-radial-gradient(circle, $innerColor, $outerColor);
    background-image: -o-radial-gradient(circle, $innerColor, $outerColor);
    background-repeat: no-repeat;
}

@mixin gradient-striped($color: #555, $angle: 45deg) {
    background-color: $color;
    background-image: -webkit-gradient(linear, 0 100%, 100% 0, color-stop(.25, rgba(255, 255, 255, .15)), color-stop(.25, transparent), color-stop(.5, transparent), color-stop(.5, rgba(255, 255, 255, .15)), color-stop(.75, rgba(255, 255, 255, .15)), color-stop(.75, transparent), to(transparent));
    background-image: -webkit-linear-gradient($angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
    background-image: -moz-linear-gradient($angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
    background-image: -o-linear-gradient($angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
    background-image: linear-gradient($angle, rgba(255, 255, 255, .15) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .15) 50%, rgba(255, 255, 255, .15) 75%, transparent 75%, transparent);
}

// Reset filters for IE
@mixin reset-filter() {
    filter: progid:DXImageTransform.Microsoft.gradient(enabled=false);
}

// IE7 inline-block
// ----------------
@mixin ie7-inline-block() {
    *display: inline; /* IE7 inline-block hack */
    *zoom: 1;
}

// IE7 likes to collapse whitespace on either side of the inline-block elements.
// Ems because we're attempting to match the width of a space character. Left
// version is for form buttons, which typically come after other elements, and
// right version is for icons, which come before. Applying both is ok, but it will
// mean that space between those elements will be .6em (~2 space characters) in IE7,
// instead of the 1 space in other browsers.
@mixin ie7-restore-left-whitespace() {
    *margin-left: .3em;

    &:first-child {
        *margin-left: 0;
    }
}

@mixin ie7-restore-right-whitespace() {
    *margin-right: .3em;
}

// Text overflow
// -------------------------
// Requires inline-block or block for proper styling
@mixin text-overflow() {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

@mixin appearance($value) {
    -webkit-appearance: $value;
    -moz-appearance: $value;
    -ms-appearance: $value;
    -o-appearance: $value;
    appearance: $value;
}

//Link
@mixin link-make($link-color, $link-hover, $underline: false) {
    color: $link-color;
    @if $underline {
        &:hover, &:active, &:focus { color: $link-hover; text-decoration: underline; }
    } @else {
        &:hover, &:active, &:focus { color: $link-hover; text-decoration: none; }
    }
}

@mixin link-bg-hover($content) {
    &:hover, &:active, &:focus { background: $content; }
}

/* #Clearing
================================================== */
/* Include clearfix on parent to clear nested columns,
or wrap each row of columns in a @include row */
@mixin clearfix {
    zoom: 1;
    &:after { clear: both; }
    &:before, &:after {
        content: '\0020';
        display: block;
        overflow: hidden;
        visibility: hidden;
        width: 0;
        height: 0; }
}

/* You can also use a @include clear to clear columns */
@mixin clear {
    clear: both;
    display: block;
    overflow: hidden;
    visibility: hidden;
    width: 0;
    height: 0;
}

@mixin link-make($link-color, $link-hover, $underline: false) {
    color: $link-color;
    @if $underline {
        &:hover { color: $link-hover; text-decoration: underline;}
    } @else {
        &:hover { color: $link-hover; text-decoration: none;}
    }
}


@mixin css-arrow($arrow-position, $arrow-color, $arrow-size) {
    &:after {
        position: absolute;
        border: solid transparent;
        content: " ";
        top: auto;
        left: auto;
        height: 0;
        width: 0;
        margin: 0;
        border-color: transparent;
        border-width: $arrow-size;
        pointer-events: none;
    }
    @if $arrow-position == "top" {
        &:after {
            bottom: 100%;
            border-bottom-color: $arrow-color;
            margin-left: (-$arrow-size);
            left: 50%;
        }
    }
    @if $arrow-position == "right" {
        &:after {
            left: 100%;
            border-left-color: $arrow-color;
            margin-top: (-$arrow-size);
            top: 50%;
        }
    }
    @if $arrow-position == "bottom" {
        &:after {
            top: 100%;
            border-top-color: $arrow-color;
            margin-left: (-$arrow-size);
            left: 50%;
        }
    }
    @if $arrow-position == "left" {
        &:after {
            right: 100%;
            border-right-color: $arrow-color;
            margin-top: (-$arrow-size);
            top: 50%;
        }
    }
}
/*

div {
    position: relative;
    padding: 1rem;
    margin: 2rem;
    width: 20%;
    font-family: sans-serif;
    color: white;
    border-radius: 0.125rem;
}

div.arrow  {
    @include css-arrow(top, SeaGreen, 0.5rem);
    background: SeaGreen;
}

*/

@mixin triangle ($size, $color, $direction) {
    height: 0;
    width: 0;

    $width: nth($size, 1);
    $height: nth($size, length($size));

    $foreground-color: nth($color, 1);
    $background-color: if(length($color) == 2, nth($color, 2), transparent);

    @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {

        $width: $width / 2;
        $height: if(length($size) > 1, $height, $height/2);

        @if $direction == up {
            border-left: $width solid $background-color;
            border-right: $width solid $background-color;
            border-bottom: $height solid $foreground-color;

        } @else if $direction == right {
            border-top: $width solid $background-color;
            border-bottom: $width solid $background-color;
            border-left: $height solid $foreground-color;

        } @else if $direction == down {
            border-left: $width solid $background-color;
            border-right: $width solid $background-color;
            border-top: $height solid $foreground-color;

        } @else if $direction == left {
            border-top: $width solid $background-color;
            border-bottom: $width solid $background-color;
            border-right: $height solid $foreground-color;
        }
    }

    @else if ($direction == up-right) or ($direction == up-left) {
        border-top: $height solid $foreground-color;

        @if $direction == up-right {
            border-left: $width solid $background-color;

        } @else if $direction == up-left {
            border-right: $width solid $background-color;
        }
    }

    @else if ($direction == down-right) or ($direction == down-left) {
        border-bottom: $height solid $foreground-color;

        @if $direction == down-right {
            border-left: $width solid $background-color;

        } @else if $direction == down-left {
            border-right: $width solid $background-color;
        }
    }

    @else if ($direction == inset-up) {
        border-width: $height $width;
        border-style: solid;
        border-color: $background-color $background-color $foreground-color;
    }

    @else if ($direction == inset-down) {
        border-width: $height $width;
        border-style: solid;
        border-color: $foreground-color $background-color $background-color;
    }

    @else if ($direction == inset-right) {
        border-width: $width $height;
        border-style: solid;
        border-color: $background-color $background-color $background-color $foreground-color;
    }

    @else if ($direction == inset-left) {
        border-width: $width $height;
        border-style: solid;
        border-color: $background-color $foreground-color $background-color $background-color;
    }
}


@mixin appearance($value : none){
    -webkit-appearance: $value;
    -moz-appearance: $value;
    -ms-appearance: $value;
    -o-appearance: $value;
    appearance: $value;
}

@mixin text-size-adjust($value : none) {
    -webkit-text-size-adjust: $value;
    -moz-text-size-adjust: $value;
    -ms-text-size-adjust: $value;
    text-size-adjust: $value;
}

@mixin translate-z($value: 0px){
    -webkit-transform: translateZ($value);
    -moz-transform:  translateZ($value);
    -ms-transform:  translateZ($value);
    transform:  translateZ($value);
}

@mixin transform-disable {
    -webkit-transform: none;
    -moz-transform: none;
    -ms-transform: none;
    -o-transform: none;
    transform: none;
}

